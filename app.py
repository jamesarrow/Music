import streamlit as st
import pandas as pd

# –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
st.set_page_config(page_title='–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞', page_icon='üéµ', layout='centered')
st.markdown("""
    <style>
    body {
        background-color: #1e1e1e;
        color: #ffffff;
    }
    .stTextInput, .stSelectbox, .stButton, .stSlider {
        background-color: #333;
        color: #ffffff;
        border-radius: 8px;
    }
    .stSlider > div > div {
        height: 8px;
        background-color: #6a0dad;
    }
    .stButton > button {
        background-color: #6a0dad;
        color: #ffffff;
        border-radius: 12px;
    }
    .total-score {
        font-size: 50px;
        color: #ffd700;
        text-align: center;
        margin-top: 20px;
    }
    .result-table {
        margin-top: 20px;
        border-radius: 8px;
    }
    </style>
    """, unsafe_allow_html=True)

# –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ —Ç—É—Å–æ–≤–∫–µ")

# –í–≤–æ–¥ –∏–º–µ–Ω–∏
name = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è:")

# –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–æ–≤
tracks = [
    "–ê–≤—Å—Ç—Ä–∞–ª–∏—è - –ú–∏–ª–∫—à–µ–π–∫–º—ç–Ω", "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω - –°–æ–ª–∏—Å—Ç –ò–ª—é—Ö–∞ –≤ –∫–æ–∂–µ",
    "–ë–µ–ª—å–≥–∏—è - –ö—Ä–∞—Å–Ω—ã–π –°–µ–±–∞—Å—Ç—å—è–Ω", "–ì—Ä—É–∑–∏—è - –®–∞–Ω—Å–æ–Ω –∏ –±–µ–ª—ã–µ —Ñ–ª–∞–≥–∏",
    "–ò—Ä–ª–∞–Ω–¥–∏—è - –ü–µ—Å–Ω—è –ø—Ä–æ –õ–∞–π–∫—É", "–ö–∏–ø—Ä - –ü–∞—Ä–µ–Ω—å –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –ª–µ—Å–∞—Ö",
    "–°–µ—Ä–±–∏—è - –ú—É–∂–∏–∫ —Å —Ö–≤–æ—Å—Ç–æ–º –ø—Ä–æ –ú–∏–ª—É", "–°–ª–æ–≤–µ–Ω–∏—è - –ü—Ä–æ –∂–µ–Ω—É –∏ —Ä–∞–∫",
    "–•–æ—Ä–≤–∞—Ç–∏—è - –í—É–Ω—à-–ø—É–Ω—à", "–ß–µ—Ö–∏—è - –ö–∏—Å-–∫–∏—Å"
]
track = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–∫:", tracks)

# –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏
criteria = ["–í–æ–∫–∞–ª", "–°—Ç–∏–ª–µ–≤–æ—Å—Ç—å", "–ö–æ—Å—Ç—é–º—ã", "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ü–µ–Ω—ã", "–•–∞—Ä–∏–∑–º–∞", "–ù–æ–º–µ—Ä", "–û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ"]
scores = {}

for criterion in criteria:
    score = st.slider(criterion, 1, 10, 5, key=criterion)
    scores[criterion] = score

# –ü–æ–¥—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–π –æ—Ü–µ–Ω–∫–∏
average_score = round(sum(scores.values()) / len(scores), 2)
st.markdown(f'<div class="total-score">–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª: {average_score}</div>', unsafe_allow_html=True)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ CSV
if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ü–µ–Ω–∫—É"):
    result = {"–ò–º—è": name, "–¢—Ä–µ–∫": track, **scores, "–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞": average_score}
    df = pd.DataFrame([result])
    df.to_csv("music_scores.csv", mode='a', header=False, index=False)
    st.success("–û—Ü–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
if st.button("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"):
    try:
        df = pd.read_csv("music_scores.csv", names=["–ò–º—è", "–¢—Ä–µ–∫"] + criteria + ["–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞"])
        st.write(df)
    except FileNotFoundError:
        st.warning("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∫–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
