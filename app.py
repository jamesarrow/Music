import streamlit as st
import pandas as pd

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ CSS
st.markdown(
    """
    <style>
    .slider {{
        background-color: #222;
        border-radius: 10px;
        padding: 10px;
        margin-bottom: 10px;
    }}
    .title {{
        font-size: 30px;
        color: #fff;
        margin-bottom: 20px;
    }}
    .track-title {{
        background-color: #333;
        padding: 15px;
        border-radius: 10px;
        color: #fff;
        margin-bottom: 15px;
    }}
    .total-score {{
        font-size: 60px;
        font-weight: bold;
        color: #fff;
        text-align: center;
    }}
    .track-info {{
        display: flex;
        align-items: center;
        gap: 15px;
    }}
    .icon {{
        font-size: 40px;
        color: #fff;
    }}
    .button {{
        background-color: #555;
        color: #fff;
        padding: 10px;
        border-radius: 10px;
        margin-top: 20px;
        text-align: center;
        cursor: pointer;
    }}
    </style>
    """,
    unsafe_allow_html=True
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.markdown('<div class="title">üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –Ω–∞ —Ç—É—Å–æ–≤–∫–µ</div>', unsafe_allow_html=True)

# –í–≤–æ–¥ –∏–º–µ–Ω–∏
name = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è:")

# –°–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–æ–≤
tracks = [
    "–ê–≤—Å—Ç—Ä–∞–ª–∏—è - –ú–∏–ª–∫—à–µ–π–∫–º—ç–Ω", "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω - –°–æ–ª–∏—Å—Ç –ò–ª—é—Ö–∞ –≤ –∫–æ–∂–µ", "–ë–µ–ª—å–≥–∏—è - –ö—Ä–∞—Å–Ω—ã–π –°–µ–±–∞—Å—Ç—å—è–Ω",
    "–ì—Ä—É–∑–∏—è - –®–∞–Ω—Å–æ–Ω –∏ –±–µ–ª—ã–µ —Ñ–ª–∞–≥–∏", "–ò—Ä–ª–∞–Ω–¥–∏—è - –ü–µ—Å–Ω—è –ø—Ä–æ –õ–∞–π–∫—É", "–ö–∏–ø—Ä - –ü–∞—Ä–µ–Ω—å –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –ª–µ—Å–∞—Ö",
    "–°–µ—Ä–±–∏—è - –ú—É–∂–∏–∫ —Å —Ö–≤–æ—Å—Ç–æ–º –ø—Ä–æ –ú–∏–ª—É", "–°–ª–æ–≤–µ–Ω–∏—è - –ü—Ä–æ –∂–µ–Ω—É –∏ —Ä–∞–∫", "–•–æ—Ä–≤–∞—Ç–∏—è - –í—É–Ω—à-–ø—É–Ω—à",
    "–ß–µ—Ö–∏—è - –ö–∏—Å-–∫–∏—Å", "–ß–µ—Ä–Ω–æ–≥–æ—Ä–∏—è - –ö–æ—Å—Ç—é–º –≤–∞—Ç–Ω–æ–≥–æ –¥–∏—Å–∫–∞", "–ù–æ—Ä–≤–µ–≥–∏—è - –ß—É–≤–∞–∫ –≤ –¥–æ—Å–ø–µ—Ö–∞—Ö"
]

# –í—ã–±–æ—Ä —Ç—Ä–µ–∫–∞
track = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–∫:", tracks)

# –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏
criteria = ["–í–æ–∫–∞–ª", "–°—Ç–∏–ª–µ–≤–æ—Å—Ç—å", "–ö–æ—Å—Ç—é–º—ã", "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ü–µ–Ω—ã", "–•–∞—Ä–∏–∑–º–∞", "–ù–æ–º–µ—Ä", "–û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ"]
scores = {}

# –°–ª–∞–π–¥–µ—Ä—ã –¥–ª—è –æ—Ü–µ–Ω–æ–∫
for criterion in criteria:
    score = st.slider(criterion, 1, 10, 5, key=criterion)
    scores[criterion] = score

# –ü–æ–¥—Å—á–µ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –±–∞–ª–ª–∞
average_score = sum(scores.values()) / len(scores)
st.markdown(f'<div class="total-score">–ò—Ç–æ–≥: {round(average_score, 1)}</div>', unsafe_allow_html=True)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ü–µ–Ω–∫—É"):
    result = {"–ò–º—è": name, "–¢—Ä–µ–∫": track, **scores, "–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞": round(average_score, 1)}
    df = pd.DataFrame([result])
    df.to_csv("results.csv", mode="a", header=False, index=False)
    st.success("–û—Ü–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
